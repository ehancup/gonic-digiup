basePath: /v1
definitions:
  base-gin_app_domain_dto.AccountLoginReq:
    properties:
      paswd:
        maxLength: 255
        minLength: 8
        type: string
      uname:
        maxLength: 16
        type: string
    required:
    - paswd
    - uname
    type: object
  base-gin_app_domain_dto.AccountLoginResp:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  base-gin_app_domain_dto.AccountProfileResp:
    properties:
      age:
        type: integer
      fullname:
        type: string
      gender:
        type: string
    type: object
  base-gin_app_domain_dto.ErrorResponse:
    properties:
      errors: {}
      message:
        type: string
      success:
        example: false
        type: boolean
    type: object
  base-gin_app_domain_dto.PersonDetailResp:
    properties:
      age:
        type: integer
      fullname:
        type: string
      gender:
        type: string
      id:
        type: integer
    type: object
  base-gin_app_domain_dto.PersonUpdateReq:
    properties:
      birth_date:
        type: string
      fullname:
        maxLength: 56
        minLength: 4
        type: string
      gender:
        enum:
        - m
        - f
        type: string
    required:
    - birth_date
    - fullname
    - gender
    type: object
  base-gin_app_domain_dto.SuccessResponse-any:
    properties:
      data: {}
      message:
        type: string
      success:
        example: true
        type: boolean
    type: object
  base-gin_app_domain_dto.SuccessResponse-array_base-gin_app_domain_dto_PersonDetailResp:
    properties:
      data:
        items:
          $ref: '#/definitions/base-gin_app_domain_dto.PersonDetailResp'
        type: array
      message:
        type: string
      success:
        example: true
        type: boolean
    type: object
  base-gin_app_domain_dto.SuccessResponse-base-gin_app_domain_dto_AccountLoginResp:
    properties:
      data:
        $ref: '#/definitions/base-gin_app_domain_dto.AccountLoginResp'
      message:
        type: string
      success:
        example: true
        type: boolean
    type: object
  base-gin_app_domain_dto.SuccessResponse-base-gin_app_domain_dto_AccountProfileResp:
    properties:
      data:
        $ref: '#/definitions/base-gin_app_domain_dto.AccountProfileResp'
      message:
        type: string
      success:
        example: true
        type: boolean
    type: object
  base-gin_app_domain_dto.SuccessResponse-base-gin_app_domain_dto_PersonDetailResp:
    properties:
      data:
        $ref: '#/definitions/base-gin_app_domain_dto.PersonDetailResp'
      message:
        type: string
      success:
        example: true
        type: boolean
    type: object
  dto.PublisherUpdateReq:
    properties:
      city:
        type: string
      name:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:3000
info:
  contact:
    email: mark.p.e.muhammad@gmail.com
    name: Mark Muhammad
  description: This is a boilerplate project, please update accordingly.
  license:
    name: MIT
  title: Base API Service
  version: "1.0"
paths:
  /accounts:
    get:
      description: Get profile of logged-in account.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.SuccessResponse-base-gin_app_domain_dto_AccountProfileResp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get account's profile
  /accounts/login:
    post:
      consumes:
      - application/json
      description: Account login using username & password combination.
      parameters:
      - description: Credential
        in: body
        name: cred
        required: true
        schema:
          $ref: '#/definitions/base-gin_app_domain_dto.AccountLoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.SuccessResponse-base-gin_app_domain_dto_AccountLoginResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
      summary: Account login
  /persons:
    get:
      description: Get a list of person.
      parameters:
      - description: Person's name
        in: query
        name: q
        type: string
      - description: Data offset
        in: query
        name: s
        type: integer
      - description: Data limit
        in: query
        name: l
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.SuccessResponse-array_base-gin_app_domain_dto_PersonDetailResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
      summary: Get a list of person
  /persons/{id}:
    get:
      description: Get a person's detail.
      parameters:
      - description: Person's ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.SuccessResponse-base-gin_app_domain_dto_PersonDetailResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
      summary: Get a person's detail
    put:
      consumes:
      - application/json
      description: Update a person's detail.
      parameters:
      - description: Person's ID
        in: path
        name: id
        required: true
        type: integer
      - description: Person's detail
        in: body
        name: detail
        required: true
        schema:
          $ref: '#/definitions/base-gin_app_domain_dto.PersonUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.SuccessResponse-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a person's detail
  /publishers/{id}:
    put:
      consumes:
      - application/json
      description: Update a publisher's detail.
      parameters:
      - description: Publisher's ID
        in: path
        name: id
        required: true
        type: integer
      - description: Publishers's detail
        in: body
        name: detail
        required: true
        schema:
          $ref: '#/definitions/dto.PublisherUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.SuccessResponse-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/base-gin_app_domain_dto.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a publisher's detail
securityDefinitions:
  BearerAuth:
    description: Bearer auth containing JWT
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
